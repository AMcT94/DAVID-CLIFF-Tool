runApp('C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/arizona')
runApp('C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/buffalo')
shiny::runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/Dashboard 3.3 - Masterfiles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/Dashboard 3.3 - Masterfiles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
paste(strong("Hello"))
bold("strong")
"<b>strong</b>"
<b>"strong"</b>
**stack**
data(iris)
cf <- condformat(iris[c(1:5, 51:55, 101:105),]) %>%
rule_text_bold(Species, expression = Species == "setosa")
## Not run:
print(cf)
strong(paste("te"))
ttheme_default()
library(gridExtra)
tt <- ttheme_default()
tt
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
df1 <- mtcars[1:10, c("mpg", "cyl") ]
# Print current state
print(df1)
# Assign widths
widths(df1) <- list(mpg = 12, cyl = 10)
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles_spanish')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles_spanish')
runApp('C:/Users/f1abm01/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/gi_dashboard_bigleap_losangeles_spanish')
shiny::runApp('C:/Users/f1axr04/Dropbox/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/tennessee')
runApp('C:/Users/f1axr04/Dropbox/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/tennessee')
View(ccdfData_MI)
ccdfData_MI$stateName <- gsub("Michigan", "Michigan State", ccdfData_MI)
ccdfData_MI$stateName <- gsub("Michigan", "Michigan State", ccdfData_MI$stateName)
ccdfData_MI$stateName <- gsub(" State", "", ccdfData_MI$stateName)
x <- 1:5; coef(lm(c(1:3, 7, 6) ~ x))
install.packages("coefplot")
library(coefplot)
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
coefplot(fit2, col.pts="blue")
coefplot(fit2, col.pts="blue") + scale_x_discrete((name ="Value", limits=c("t-4","t-2","t","t+2","t+4")))
rm(list=ls())
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
coefplot(fit2, col.pts="blue")
xplot <- coefplot(fit2, col.pts="blue") + scale_x_discrete(limits=c("t-4","t-2","t","t+2","t+4"))
xplot
coefplot(fit2, col.pts="blue")
View(fit1)
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
coefplot(fit2, col.pts="blue")
# plot 2
longnames <- c("(Intercept)", longnames)
coefplot(fit1, longnames, intercept=TRUE, CI=1)
# plot 3
coefplot(fit2, vertical=FALSE, var.las=1, frame.plot=TRUE)
xplot <- coefplot(fit1)
xplot
fit1$coefficients
coefplot(fit2, vertical=FALSE, var.las=1, frame.plot=TRUE)
longnames <- c("(Intercept)", longnames)
coefplot(fit1, longnames, intercept=TRUE, CI=1)
xplot <- coefplot(fit2, col.pts="blue")
xplot <- xplot + scale_x_discrete(limits=c("t_6", "t_4", "t_2", "t",
"t2", "t4", "t6")
)
xplot
xplot <- coefplot(fit2, col.pts="blue")
xplot
xplot <- xplot + scale_x_continuous(limits=c("t_6", "t_4", "t_2", "t",
"t2", "t4", "t6"))
xplot
t <- 0
xplot <- xplot + scale_x_discrete(limits=c("t_6", "t_4", "t_2", "t",
"t2", "t4", "t6"))
xplot
t
xplot <- xplot + scale_x_discrete(limits=c(6, 4, 2, 0,
2, 4, 6)
)
coefplot(fit2, vertical=FALSE, varnames=c("t_4","t_2","t","t2","t4")var.las=1, frame.plot=TRUE)
coefplot(fit2, vertical=FALSE, varnames=c("t_4","t_2","t","t2","t4",)var.las=1, frame.plot=TRUE)
coefplot(fit2, vertical=FALSE, varnames=list("t_4","t_2","t","t2","t4")var.las=1, frame.plot=TRUE)
data(diamonds)
mod6 <- rxLogit(price > 10000 ~ carat + cut + x, data=diamonds)
coefplot(mod6)
install.packages("survey")
library(survey)
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
coefplot(fit2, col.pts="blue")
xplot <- coefplot(fit2, col.pts="blue") coord_flip()
xplot <- coefplot(fit2, col.pts="blue") + coord_flip()
xplot
xplot <- xplot + variable.names()
xplot <- coefplot(fit2, col.pts="blue", variable.names=c("a","b","c","d","e","f")) + coord_flip()
xplot
xplot <- coefplot(fit2, col.pts="blue", varnames=c("a","b","c","d","e","f")) + coord_flip()
xplot
coefplot(fit2, col.pts="blue")) + coord_flip()
xplot <-  coefplot(fit2, col.pts="blue") + coord_flip()
xplot
xplot2 <- xplot + scale_x_discrete(limits=c("a","b","c","d","e","f"))
xplot2
xplot2 <- xplot + scale_y_discrete(limits=c("a","b","c","d","e","f"))
xplot2
xplot2 <- xplot$coordinates
xplot2
xplot$labels
xplot$layers
xplot$data
xplot$mapping
xplot$scales
xplot$plot_env
xplot
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
xplot <- coefplot(fit2, col.pts="blue",xlab = "Coefficient",ylab = "Event Time")+theme_light()+coord_flip()
xplot
xplot2 <- xplot + variable.names=c("a","b","c","d","e","f")
xplot2 <- xplot + variable.names=c("a","b","c","d","e","f")
namelist <- c("a","b","c","d","e","f")
namelist
xplot2 <- xplot + variable.names(namelist)
xplot2
xplot2
longnames <- c("(Intercept)", longnames)
coefplot(fit1, longnames, intercept=TRUE, CI=1)
coefplot(fit1)
xplot <- coefplot(fit2, col.pts="blue", newNames=c("a","b","c","d","e","f")) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue", newNames=c("a","b","c","d","e")) + coord_flip()
f = function(){
lm(rbinom(1000,1,.5) ~ rnorm(1000,50,2) + rbinom(1000,1,prob=0.63) + rpois(1000, 2))
}
f
xplot <- coefplot(fit2, col.pts="blue", newNames=setNames(c("a","b","c","d","e","f"))) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue", newNames=setNames(c(b","c","d","e","f"))) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue", newNames=setNames(c(b","c","d","e","f"))) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue", newNames=setNames(c("b","c","d","e","f"))) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue", newNames=setNames(c("a","b","c","d","e","f"),names(coefficients(coefplot())))) + coord_flip()
xplot <- coefplot(fit2, col.pts="blue") + coord_flip()
xplot2 <- xplot + setNames(c("a","b","c","d","e","f"),names(coefficients(xplot)))
xplot$data$Coefficient
xplot2 <- xplot + setNames(c("a","b","c","d","e","f"),names(coefficients(xplot$data$Coefficient)))
xplot$data$Coefficient
setNames(c("a","b","c","d","e","f"),names(coefficients(xplot$data$Coefficient)))
setNames(c("a","b","c","d","e","f"),names(coefficients(xplot$data[['Coefficient']])))
xplot$data
View(xplot)
view(xplot$data)
View(xplot$data)
row.names(xplot$data)
setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data)))
xplot2 <- xplot + setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data)))
xplot
x <- setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data)))
x
xplot2 <- xplot + x
old.par <- par(no.readonly = TRUE)
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000,1,prob=0.72)
x1 <- rnorm(1000,50,2)
x2 <- rbinom(1000,1,prob=0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000,40,100)
x5 <- rbeta(1000,2,2)
longnames <- c("a long name01","a long name02","a long name03",
"a long name04","a long name05")
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
fit2 <- glm(y2 ~ x1 + x2 + x3 + x4 + x5,
family=binomial(link="logit"))
op <- par()
# plot 1
par (mfrow=c(2,2))
coefplot(fit1)
coefplot(fit2, col.pts="blue", setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data))))
f = function(){
lm(rbinom(1000,1,.5) ~ rnorm(1000,50,2) + rbinom(1000,1,prob=0.63) + rpois(1000, 2))
}
coefplot::coefplot.glm(f(),
newNames = setNames(c("Interc", "3", "2", "1"),names(coefficients(f())))
)
coefplot:(fit2, col.pts="blue",coefficients=c("a","b","c","d","e","f"))
coefplot:(fit2, col.pts="blue",coefficients=c("a","b","c","d","e","f"))
xplot <- coefplot:(fit2, col.pts="blue") + coord_flip()
xplot
coefplot(fit2, col.pts="blue",coefficients=c("a","b","c","d","e","f"))
coefplot(fit2, col.pts="blue",coefficients=c("a","b","c","d","e","f"))
coefplot(fit2, col.pts="blue")
xplot <- coefplot(fit2, col.pts="blue") + coord_flip()
listnames <- setNames(c("Interc", "3", "2", "1"),names(coefficients(xplot())))
xplot
setNames(c("Interc", "3", "2", "1"),names(row.names(xplot$data)))
setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data)))
listNames <- setNames(c("a","b","c","d","e","f"),names(row.names(xplot$data)))
xplot2 <- xplot + listNames
coefplot(fit2, col.pts="blue",listNames)
coefplot(variable.names)
xplot
xplot <- scale_y_continuous()
xplot
xplot <- coefplot(fit2, col.pts="blue") + coord_flip()
xplot2 <- xplot + scale_y_discrete("a","b","c","d","e","f")
xplot2
setNames(row.names(xplot$data))
row.names(xplot$data)
rownames(xplot$data) <- c("a","b","c","d","e","f")
xplot$data
xplot
xplot$data$Coefficient
xplot$data$Coefficient <- c("a","b","c","d","e","f")
xplot$data$Coefficient
xplot
xplot <- coefplot(fit2, col.pts="blue")
xplot
xplot <- coefplot(fit2, col.pts="blue") + coord_flip
xplot <- coefplot(fit2, col.pts="blue") + coord_flip()
xplot
xplot <- coefplot(fit2, col.pts="blue",xlab="Coefficient",ylab="Event Time") + coord_flip()
xplot
xplot$data$Coefficient <- c("t-4","t-2","t","t+2","t+4","t+6")
xplot
xplot$data$Coefficient <- order(c("t_4","t_2","t","t+2","t+4","t+6"))
xplot
order(c("t_4","t_2","t","t+2","t+4","t+6"))
xplot <- coefplot(fit2, col.pts="blue",xlab="Coefficient",ylab="Event Time") + coord_flip()
xplot$data$Coefficient
list <- factor("t_4","t_2","t","t+2","t+4","t+6")
listName <- factor("t_4","t_2","t","t+2","t+4","t+6")
E
listName <- c("t_4","t_2","t","t+2","t+4","t+6")
listName
xplot <- coefplot(fit2, col.pts="blue",xlab="Coefficient",ylab="Event Time") + coord_flip()
xplot$data$Coefficient
xplot$data$Coefficient[1] <- "t_4"
xplot$data$Coefficient[1] <- as.factor("t_4")
xplot$data_Coefficient <- as.numeric(xplot$data_Coefficient)
xplot$data_Coefficient <- as.character(xplot$data_Coefficient)
xplot$data$Coefficient
xplot$data$Coefficient <- as.character(xplot$data$Coefficient)
xplot$data$Coefficient
xplot$data
xplot$data$Coefficient <- c("t-4","t-2","t","t+2","t+4","t+6")
xplot$data$Coefficient
xplot$data$Coefficient <- as.factor(xplot$data$Coefficient)
xplot$data$Coefficient
xplot$data$Coefficient
xplot$data$Coefficient <- as.character(xplot$data$Coefficient)
xplot$data$Coefficient
xplot$data$Coefficient <- factor(xplot$data$Coefficient, levels = xplot$data$Coefficient[1:6])
xplot$data$Coefficient
xplot$data
xplot
shiny::runApp('C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/Dashboard 3.4 - Masterfiles')
runApp('C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/Dashboard 3.4 - Masterfiles')
runApp('C:/Users/edgar/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/Dashboard 3.4 - Masterfiles')
gc()
shiny::runApp('C:/Users/f1exr03/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/prd_dashboard')
runApp('C:/Users/f1exr03/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/prd_dashboard')
runApp('C:/Users/f1exr03/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/prd_dashboard')
runApp('C:/Users/f1exr03/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/prd_dashboard')
rm(list=ls())
rm(list=ls())
# !!! Specify User !!!
#user <- "f1axr04/Dropbox"
#user<-"f1ixi02/Dropbox (ATL FRB)" # Elias
#user <- "F1ABM01/Dropbox (ATL FRB)" #Austin
user<-"f1exr03/Dropbox (ATL FRB)"
#Call all the functions #####################
source(paste0("BenefitsCalculator/loadFilesandFunctions.R"), local=TRUE) # Load auxiliary files and required functions
source(paste0("BenefitsCalculator/libraries.R"), local=TRUE) # Load required packages
runApp('C:/Users/f1exr03/Dropbox (ATL FRB)/WorkForceDevProj/CareerLadderTool/Tools for Shinyapps.io/prd_dashboard')
install.packages("shiny")
install.packages("shiny")
if (!"shiny" %in% rownames(installed.packages())){install.packages("shiny")}
if (!"shinythemes" %in% rownames(installed.packages())){install.packages("shinythemes")}
if (!"shinydashboard" %in% rownames(installed.packages())){install.packages("shinydashboard")}
if (!"shinyjs" %in% rownames(installed.packages())){install.packages("shinyjs")}
if (!"shinyWidgets" %in% rownames(installed.packages())){install.packages("shinyWidgets")}
if (!"matrixStats" %in% rownames(installed.packages())){install.packages("matrixStats")}
if (!"rstudioapi" %in% rownames(installed.packages())){install.packages("rstudioapi")}
if (!"xtable" %in% rownames(installed.packages())){install.packages("xtable")}
if (!"Hmisc" %in% rownames(installed.packages())){install.packages("Hmisc")}
if (!"tidyverse" %in% rownames(installed.packages())){install.packages("tidyverse")}
if (!"openxlsx" %in% rownames(installed.packages())){install.packages("openxlsx")}
if (!"readxl" %in% rownames(installed.packages())){install.packages("readxl")}
if (!"data.table" %in% rownames(installed.packages())){install.packages("data.table")}
if (!"readstata13" %in% rownames(installed.packages())){install.packages("readstata13")}
if (!"V8" %in% rownames(installed.packages())){install.packages("V8")}
if (!"ggplot2" %in% rownames(installed.packages())){install.packages("ggplot2")}
if (!"knitr" %in% rownames(installed.packages())){install.packages("knitr")}
if (!"RColorBrewer" %in% rownames(installed.packages())){install.packages("RColorBrewer")}
if (!"scales" %in% rownames(installed.packages())){install.packages("scales")}
if (!"tidyr" %in% rownames(installed.packages())){install.packages("tidyr")}
if (!"grid" %in% rownames(installed.packages())){install.packages("grid")}
if (!"rmarkdown" %in% rownames(installed.packages())){install.packages("rmarkdown")}
if (!"reshape2" %in% rownames(installed.packages())){install.packages("reshape2")}
if (!"plyr" %in% rownames(installed.packages())){install.packages("plyr")}
if (!"dplyr" %in% rownames(installed.packages())){install.packages("dplyr")}
if (!"data.table" %in% rownames(installed.packages())){install.packages("data.table")}
if (!"shinyBS" %in% rownames(installed.packages())){install.packages("shinyBS")}
if (!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
if (!"BH" %in% rownames(installed.packages())){install.packages("BH")}
if (!"shinyWidgets" %in% rownames(installed.packages())){install.packages("shinyWidgets")}
library(shiny)
library(shinythemes)
library(shinydashboard)
library(shinyjs)
library(shinyWidgets)
library(matrixStats)
library(rstudioapi)
library(xtable)
library(Hmisc)
library(tidyverse)
library(openxlsx)
library(readxl)
library(data.table)
library(readstata13)
library(V8)
library(ggplot2)
library(knitr)
library(RColorBrewer)
library(scales)
library(tidyr)
library(grid)
library(rmarkdown)
library(reshape2)
library(data.table)
library(shinyBS)
library(plotly)
library(BH)
library(shinyWidgets)
library(shinycssloaders)
# !!! IMPORTANT !!!
# Load dplyr and plyr in the right order (to avoid functions override)
if("dplyr" %in% (.packages())){
detach("package:dplyr", unload=TRUE)
}
if("plyr" %in% (.packages())){
detach("package:plyr", unload=TRUE)
}
library(plyr)
library(dplyr)
if (!require("reticulate")) {install.packages("reticulate")}
library(reticulate)
file.edit('~/.Renviron')
usethis::edit_r_environ()
file.edit('~/.Renviron')
install.packages("shiny")
install.packages("openxlsx")
install.packages("openxlsx")
# #######################################
# Load all necessary packages
#########################################
# Add new packages here
# For Benefits Calculator
# For CLIFF tools
# For other projects
if (!"shiny" %in% rownames(installed.packages())){install.packages("shiny")}
if (!"shinythemes" %in% rownames(installed.packages())){install.packages("shinythemes")}
if (!"shinydashboard" %in% rownames(installed.packages())){install.packages("shinydashboard")}
if (!"shinyjs" %in% rownames(installed.packages())){install.packages("shinyjs")}
if (!"shinyWidgets" %in% rownames(installed.packages())){install.packages("shinyWidgets")}
if (!"matrixStats" %in% rownames(installed.packages())){install.packages("matrixStats")}
if (!"rstudioapi" %in% rownames(installed.packages())){install.packages("rstudioapi")}
if (!"xtable" %in% rownames(installed.packages())){install.packages("xtable")}
if (!"Hmisc" %in% rownames(installed.packages())){install.packages("Hmisc")}
if (!"tidyverse" %in% rownames(installed.packages())){install.packages("tidyverse")}
if (!"openxlsx" %in% rownames(installed.packages())){install.packages("openxlsx")}
if (!"readxl" %in% rownames(installed.packages())){install.packages("readxl")}
if (!"data.table" %in% rownames(installed.packages())){install.packages("data.table")}
if (!"readstata13" %in% rownames(installed.packages())){install.packages("readstata13")}
if (!"V8" %in% rownames(installed.packages())){install.packages("V8")}
if (!"ggplot2" %in% rownames(installed.packages())){install.packages("ggplot2")}
if (!"knitr" %in% rownames(installed.packages())){install.packages("knitr")}
if (!"RColorBrewer" %in% rownames(installed.packages())){install.packages("RColorBrewer")}
if (!"scales" %in% rownames(installed.packages())){install.packages("scales")}
if (!"tidyr" %in% rownames(installed.packages())){install.packages("tidyr")}
if (!"grid" %in% rownames(installed.packages())){install.packages("grid")}
if (!"rmarkdown" %in% rownames(installed.packages())){install.packages("rmarkdown")}
if (!"reshape2" %in% rownames(installed.packages())){install.packages("reshape2")}
if (!"plyr" %in% rownames(installed.packages())){install.packages("plyr")}
if (!"dplyr" %in% rownames(installed.packages())){install.packages("dplyr")}
if (!"data.table" %in% rownames(installed.packages())){install.packages("data.table")}
if (!"shinyBS" %in% rownames(installed.packages())){install.packages("shinyBS")}
if (!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
if (!"BH" %in% rownames(installed.packages())){install.packages("BH")}
if (!"shinyWidgets" %in% rownames(installed.packages())){install.packages("shinyWidgets")}
library(shiny)
library(shinythemes)
library(shinydashboard)
library(shinyjs)
library(shinyWidgets)
library(matrixStats)
library(rstudioapi)
library(xtable)
library(Hmisc)
library(tidyverse)
library(openxlsx)
library(readxl)
library(data.table)
library(readstata13)
library(V8)
library(ggplot2)
library(knitr)
library(RColorBrewer)
library(scales)
library(tidyr)
library(grid)
library(rmarkdown)
library(reshape2)
library(data.table)
library(shinyBS)
library(plotly)
library(BH)
library(shinyWidgets)
library(shinycssloaders)
# !!! IMPORTANT !!!
# Load dplyr and plyr in the right order (to avoid functions override)
if("dplyr" %in% (.packages())){
detach("package:dplyr", unload=TRUE)
}
if("plyr" %in% (.packages())){
detach("package:plyr", unload=TRUE)
}
library(plyr)
library(dplyr)
if (!require("reticulate")) {install.packages("reticulate")}
library(reticulate)
